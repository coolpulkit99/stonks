{"version":3,"sources":["reportWebVitals.js","Components/ListsScreen.js","Mainscreen.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ChartFrame","React","lazy","TickerDisplay","Watchlist","ListsScreen","props","state","tickers","pointer","watchlist","Set","updateTicker","bind","addToWatchlist","removeFromWatchlist","console","log","this","setState","index","length","add","delete","className","fallback","current","ticker","Component","Mainscreen","useState","show","setShow","modalContent","setModalType","modalContentToRender","handleShow","type","axios","results","data","indexOf","split","ButtonGroup","vertical","Button","size","onClick","Dropdown","as","Toggle","variant","id","Menu","Item","Modal","backdrop","aria-labelledby","centered","onHide","Header","closeButton","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec84829e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport React,{Suspense, Component } from \"react\";\n\n// import ChartFrame from \"./ChartFrame\";\n// import TickerDisplay from \"./TickerDisplay\";\n// import Watchlist from \"./Watchlist\";\n\nconst ChartFrame = React.lazy(() => import('./ChartFrame'));\nconst TickerDisplay = React.lazy(() => import('./TickerDisplay'));\nconst Watchlist = React.lazy(() => import('./Watchlist'));\n\n\n\nclass ListsScreen extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { tickers: [\"AAPL\"], pointer: 0, watchlist: new Set() }\n    this.updateTicker = this.updateTicker.bind(this);\n    this.addToWatchlist = this.addToWatchlist.bind(this);\n    this.removeFromWatchlist = this.removeFromWatchlist.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"called\")\n    this.state[\"tickers\"] = this.props.tickers;\n    // console.log(this.props.tickers);\n    this.state[\"pointer\"] = this.props.pointer;\n    this.setState(this.state);\n  }\n\n  updateTicker(index) {\n    if (index >= 0 && index < this.state.tickers.length) {\n      this.state[\"pointer\"] = index;\n      this.setState(this.state);\n    }\n  }\n\n  addToWatchlist(index) {\n    this.state[\"watchlist\"].add(index);\n    this.setState(this.state);\n  }\n  removeFromWatchlist(index) {\n    this.state[\"watchlist\"].delete(index);\n    this.setState(this.state);\n  }\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"framebox\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <TickerDisplay\n            className=\"tickerlist\"\n            updateTicker={this.updateTicker}\n            tickers={this.state.tickers}\n            current={this.state.pointer}\n            addToWatchlist={this.addToWatchlist}\n            removeFromWatchlist={this.removeFromWatchlist} />\n\n          <ChartFrame className=\"chartdisplay\"\n            ticker={this.state.tickers.length > 0 ? this.state.tickers[this.state.pointer] : []} />\n\n          <Watchlist\n            watchlist={this.state.watchlist}\n            updateTicker={this.updateTicker}\n            tickers={this.state.tickers}\n            current={this.state.pointer}\n            addToWatchlist={this.addToWatchlist}\n            removeFromWatchlist={this.removeFromWatchlist} />\n        </Suspense>\n      </div>\n    );\n\n  }\n\n}\n\nexport default ListsScreen;","import { useState } from \"react\";\r\nimport { Button, ButtonGroup, Dropdown, ListGroup, Modal } from \"react-bootstrap\";\r\nimport ListsScreen from \"./Components/ListsScreen\";\r\nimport axios from \"axios\"\r\n\r\nfunction Mainscreen() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    // const [modalType, setModalType] = useState(\"\");\r\n    const [modalContent, setModalType] = useState(\"undefined\");\r\n\r\n\r\n    let modalContentToRender = \"undefined\";\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (type) => {\r\n\r\n        console.log(type);\r\n        if (type == \"50\") {\r\n            axios('http://localhost:8087/nifty/50')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n\r\n        } else if (type == \"100\") {\r\n            axios('http://localhost:8087/nifty/100')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n        else if (type == \"200\") {\r\n            axios('http://localhost:8087/nifty/200')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n        else if (type == \"500\") {\r\n            axios('http://localhost:8087/nifty/500')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n        else if (type.indexOf(\"filtered\")!=-1) {\r\n            console.log(\"results\");\r\n            axios('http://localhost:8087/filter/'+type.split(\"-\")[1])\r\n                .then((results) => {\r\n                    console.log(results);\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flexbox\">\r\n\r\n            <ButtonGroup vertical>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"50\") }}>Nifty 50</Button>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"100\") }}>Nifty 100</Button>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"200\") }}>Nifty 200</Button>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"500\") }}>Nifty 500</Button>\r\n\r\n                <Dropdown as={ButtonGroup}>\r\n                    <Button size=\"lg\" onClick={() => { handleShow(\"filtered-50\") }}>Filtered</Button>\r\n\r\n                    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-50\") } }>Filtered Nifty50</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-100\") } }>Filtered Nifty100</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-200\") } }>Filtered Nifty200</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-500\") } }>Filtered Nifty500</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </ButtonGroup>\r\n            <Modal\r\n                className=\"flexbox modalclass\"\r\n                backdrop='static'\r\n                size=\"xl\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton />\r\n                <br></br>\r\n                {modalContent}\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Mainscreen;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Mainscreen from './Mainscreen';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Mainscreen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}