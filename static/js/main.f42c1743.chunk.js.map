{"version":3,"sources":["reportWebVitals.js","Components/Chart.js","Components/ChartFrame.js","Components/TickerDisplay.js","Components/Watchlist.js","Components/ListsScreen.js","Mainscreen.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Plot","createPlotlyComponent","Plotly","Chart","props","data","x","date","open","high","low","close","type","dateAverage","y","average","mode","line","width","color","layout","autosize","height","title","ticker","sma","require","reFormat","apiResponse","quotes","response","forEach","element","push","slice","listify","ChartFrame","state","nextProps","axios","urlRemote","results","console","log","setState","this","Component","TickerDisplay","tickers","listItems","map","index","current","ListGroup","Item","action","as","active","onClick","updateTicker","className","Pagination","Prev","Next","OverlayTrigger","overlay","Tooltip","id","input","document","createElement","value","join","body","appendChild","select","execCommand","removeChild","length","vertical","Watchlist","watchlist","Array","from","style","textAlign","variant","addToWatchlist","removeFromWatchlist","ListsScreen","pointer","Set","bind","add","delete","Mainscreen","useState","show","setShow","modalContent","setModalType","modalContentToRender","handleShow","indexOf","split","ButtonGroup","Button","size","Dropdown","Toggle","Menu","Modal","backdrop","aria-labelledby","centered","onHide","Header","closeButton","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f42c1743.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Plotly from \"plotly.js\"\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\n\r\n\r\nconst Plot = createPlotlyComponent(Plotly);\r\nfunction Chart(props) {\r\n    return (\r\n        <Plot\r\n            data={[\r\n                {\r\n                    x: props.date,\r\n                    open: props.open,\r\n                    high: props.high,\r\n                    low: props.low,\r\n                    close: props.close,\r\n                    type: 'candlestick',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    x: props.dateAverage,\r\n                    y: props.average,\r\n                    mode:\"lines\",\r\n                    line:{\r\n                        width:1,\r\n                        color: \"#F00\"\r\n                    }\r\n                    \r\n                },\r\n            ]}\r\n            layout={{\r\n                autosize: true,\r\n                // width: 1400,\r\n                height: 540, \r\n                title: props.ticker\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nexport default Chart;","import Chart from './Chart';\nimport { Component } from \"react\";\nimport axios from \"axios\";\n  \nvar sma = require('sma');\n\nfunction listify(data) {\n  var open = [];\n  var high = [];\n  var low = [];\n  var close = [];\n  var date = [];\n\n  data.forEach(element => {\n    open.push(element.open);\n    high.push(element.high);\n    low.push(element.low);\n    close.push(element.close);\n    date.push(element.date);\n  });\n\n  let response = {\n    open: open.slice(43),\n    high: high.slice(43),\n    low: low.slice(43),\n    close: close.slice(43),\n    date: date.slice(43),\n    average: sma(close, 44),\n    dateAverage: date.slice(43)\n  }\n  // console.log(response)\n  return response;\n}\n\nfunction reFormat(apiResponse) {\n  let quotes = apiResponse[\"quotes\"];\n  let response = listify(quotes[\"data\"]);\n  response[\"ticker\"] = quotes[\"ticker\"];\n  // response.merge();\n  return response;\n}\n\n\nclass ChartFrame extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    \n  }\n\n  componentWillReceiveProps(nextProps){\n    let urlRemote=\"https://stockdataapi.herokuapp.com\";\n    axios(urlRemote+'/ticker/'+nextProps[\"ticker\"])\n    .then((results) => {\n      console.log(results.data)\n      this.setState(reFormat(results.data))\n    }\n  );\n  }\n\n  render() {\n    return (\n      <div>\n        <Chart\n          open={this.state.open}\n          high={this.state.high}\n          low={this.state.low}\n          close={this.state.close}\n          date={this.state.date}\n          average={this.state.average}\n          dateAverage={this.state.dateAverage}\n          ticker={this.state.ticker}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default ChartFrame;\n","import { ListGroup, OverlayTrigger, Pagination, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction TickerDisplay(props) {\r\n    const tickers = props.tickers;\r\n    const listItems = tickers.map((ticker, index) => {\r\n        if (index == props.current)\r\n            return (<ListGroup.Item action as=\"li\" active onClick={() => props.updateTicker(index)}>{ticker}</ListGroup.Item>);\r\n        else\r\n            return (<ListGroup.Item action as=\"li\" onClick={() => props.updateTicker(index)}>{ticker}</ListGroup.Item>)\r\n    });\r\n\r\n    // let listItems=[]\r\n    // for(var i =0 ;i<Math.min(3);i++)\r\n    // const addToWatchlist = () => { props.addToWatchlist(props.current) }\r\n    // const removeFromWatchlist = () => { props.removeFromWatchlist(props.current) }\r\n\r\n\r\n    return (\r\n        <div className=\"flexbox stocklist\">\r\n            <Pagination >\r\n                <Pagination.Prev className=\"buttonnormalize\" onClick={() => props.updateTicker(props.current - 1)}>Back</Pagination.Prev >\r\n                <Pagination.Next className=\"buttonnormalize\" onClick={() => props.updateTicker(props.current + 1)}>Next</Pagination.Next >\r\n                </Pagination>\r\n            <Pagination>\r\n\r\n            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">    Click to copy all tickers!</Tooltip>}>\r\n            <Pagination.Next className=\"buttonnormalize\" \r\n            // disabled\r\n            onClick={()=>{\r\n                var input = document.createElement(\"input\");\r\n                input.type = \"text\";\r\n                input.value= tickers.join(\" \");\r\n                document.body.appendChild(input);\r\n                input.select();\r\n                document. execCommand(\"copy\");   \r\n                document.body.removeChild(input);\r\n            }}\r\n            >{(1+props.current)+\" of \"+props.tickers.length + \" Tickers\"}</Pagination.Next >\r\n            </OverlayTrigger>\r\n\r\n            </Pagination>\r\n            {/* <Pagination>\r\n                \r\n                <Pagination.Prev className=\"buttonnormalize\" onClick={addToWatchlist}>Add</Pagination.Prev >\r\n                <Pagination.Next className=\"buttonnormalize\" onClick={removeFromWatchlist}>Remove</Pagination.Next >\r\n            </Pagination> */}\r\n            <ListGroup className=\"list\" vertical> {listItems} </ListGroup>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default TickerDisplay;","import { ListGroup, OverlayTrigger, Pagination, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction Watchlist(props) {\r\n    // console.log(props);\r\n    const tickers = props.tickers;\r\n    console.log(props.watchlist);\r\n    const listItems = Array.from(props.watchlist).map(index => {\r\n        // console.log(tickers[index]);\r\n        return (\r\n            <ListGroup.Item action as=\"li\" onClick={() => props.updateTicker(index)}>\r\n                {tickers[index]}\r\n            </ListGroup.Item>\r\n        );\r\n    }\r\n    );\r\n    // console.log(listItems);\r\n    const keyHandle=(event)=>{\r\n        if(event.key === 'Enter'){\r\n            console.log('press here! ')\r\n        }\r\n    }\r\n\r\n    const addToWatchlist = () => { props.addToWatchlist(props.current) }\r\n    const removeFromWatchlist = () => { props.removeFromWatchlist(props.current) }\r\n\r\n    return (\r\n        <div>\r\n            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">    Click to copy watchlist!</Tooltip>}>\r\n            <ListGroup.Item className=\"buttonnormalize\" action style={{textAlign: \"center\"}} variant=\"Primary\" onClick={()=>{\r\n                var input = document.createElement(\"input\");\r\n                input.type = \"text\";\r\n                input.value= Array.from(props.watchlist).map(index=>tickers[index]).join(\" \");\r\n                document.body.appendChild(input);\r\n                input.select();\r\n                document. execCommand(\"copy\");   \r\n                document.body.removeChild(input);\r\n            }}>Watchlist</ListGroup.Item>\r\n            </OverlayTrigger>\r\n            <Pagination>\r\n                \r\n                <Pagination.Prev className=\"buttonnormalize\" onClick={addToWatchlist}>Add</Pagination.Prev >\r\n                <Pagination.Next className=\"buttonnormalize\" onClick={removeFromWatchlist}>Remove</Pagination.Next >\r\n            </Pagination>\r\n            <ListGroup className=\"list\" vertical>\r\n\r\n                {listItems}\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watchlist;","import axios from \"axios\";\nimport React,{Suspense, Component } from \"react\";\n\nimport ChartFrame from \"./ChartFrame\";\nimport TickerDisplay from \"./TickerDisplay\";\nimport Watchlist from \"./Watchlist\";\n\n// const ChartFrame = React.lazy(() => import('./ChartFrame'));\n// const TickerDisplay = React.lazy(() => import('./TickerDisplay'));\n// const Watchlist = React.lazy(() => import('./Watchlist'));\n\n\n\nclass ListsScreen extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { tickers: [\"AAPL\"], pointer: 0, watchlist: new Set() }\n    this.updateTicker = this.updateTicker.bind(this);\n    this.addToWatchlist = this.addToWatchlist.bind(this);\n    this.removeFromWatchlist = this.removeFromWatchlist.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"called\")\n    this.state[\"tickers\"] = this.props.tickers;\n    // console.log(this.props.tickers);\n    this.state[\"pointer\"] = this.props.pointer;\n    this.setState(this.state);\n  }\n\n  updateTicker(index) {\n    if (index >= 0 && index < this.state.tickers.length) {\n      this.state[\"pointer\"] = index;\n      this.setState(this.state);\n    }\n  }\n\n  addToWatchlist(index) {\n    this.state[\"watchlist\"].add(index);\n    this.setState(this.state);\n  }\n  removeFromWatchlist(index) {\n    this.state[\"watchlist\"].delete(index);\n    this.setState(this.state);\n  }\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"framebox\">\n        {/* <Suspense fallback={<div>Loading...</div>}> */}\n          <TickerDisplay\n            className=\"tickerlist\"\n            updateTicker={this.updateTicker}\n            tickers={this.state.tickers}\n            current={this.state.pointer}\n            addToWatchlist={this.addToWatchlist}\n            removeFromWatchlist={this.removeFromWatchlist} />\n\n          <ChartFrame className=\"chartdisplay\"\n            ticker={this.state.tickers.length > 0 ? this.state.tickers[this.state.pointer] : []} />\n\n          <Watchlist\n            watchlist={this.state.watchlist}\n            updateTicker={this.updateTicker}\n            tickers={this.state.tickers}\n            current={this.state.pointer}\n            addToWatchlist={this.addToWatchlist}\n            removeFromWatchlist={this.removeFromWatchlist} />\n        {/* </Suspense> */}\n      </div>\n    );\n\n  }\n\n}\n\nexport default ListsScreen;","import { useState } from \"react\";\r\nimport { Button, ButtonGroup, Dropdown, ListGroup, Modal } from \"react-bootstrap\";\r\nimport ListsScreen from \"./Components/ListsScreen\";\r\nimport axios from \"axios\"\r\n\r\nfunction Mainscreen() {\r\n\r\n    const [show, setShow] = useState(false);\r\n    // const [modalType, setModalType] = useState(\"\");\r\n    const [modalContent, setModalType] = useState(\"undefined\");\r\n\r\n\r\n    let modalContentToRender = \"undefined\";\r\n    let urlRemote=\"https://stockdataapi.herokuapp.com\"\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = (type) => {\r\n\r\n        console.log(type);\r\n        if (type == \"50\") {\r\n            axios(urlRemote+'/nifty/50')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n\r\n        } else if (type == \"100\") {\r\n            axios(urlRemote+'/nifty/100')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n        else if (type == \"200\") {\r\n            axios(urlRemote+'/nifty/200')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n        else if (type == \"500\") {\r\n            axios(urlRemote+'/nifty/500')\r\n                .then((results) => {\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n        else if (type.indexOf(\"filtered\")!=-1) {\r\n            console.log(\"results\");\r\n            axios(urlRemote+'/filter/'+type.split(\"-\")[1])\r\n                .then((results) => {\r\n                    console.log(results);\r\n                    modalContentToRender = (<ListsScreen pointer={0} tickers={results.data.tickers} />);\r\n                    setModalType(modalContentToRender);\r\n\r\n                    setShow(true);\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flexbox\">\r\n\r\n            <ButtonGroup vertical>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"50\") }}>Nifty 50</Button>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"100\") }}>Nifty 100</Button>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"200\") }}>Nifty 200</Button>\r\n                <Button size=\"lg\" onClick={() => { handleShow(\"500\") }}>Nifty 500</Button>\r\n\r\n                <Dropdown as={ButtonGroup}>\r\n                    <Button size=\"lg\" onClick={() => { handleShow(\"filtered-50\") }}>Filtered</Button>\r\n\r\n                    <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-50\") } }>Filtered Nifty50</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-100\") } }>Filtered Nifty100</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-200\") } }>Filtered Nifty200</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { handleShow(\"filtered-500\") } }>Filtered Nifty500</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </ButtonGroup>\r\n            <Modal\r\n                className=\"flexbox modalclass\"\r\n                backdrop='static'\r\n                size=\"xl\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton />\r\n                <br></br>\r\n                {modalContent}\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Mainscreen;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Mainscreen from './Mainscreen';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Mainscreen />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}